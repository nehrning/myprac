/*
 * Built In Shader종류
 *
 *FX: 조명과 글래스 효과 셰이더입니다.
 *GUI 및 UI: 사용자 인터페이스 그래픽스를 위한 셰이더입니다.
 *Mobile: 모바일 디바이스를 위한 간편화된 고성능 셰이더입니다.
 *Nature: 나무 및 터레인을 위한 셰이더입니다.
 *Particles: 파티클 시스템 효과 셰이더입니다.
 *Skybox: 모든 지오메트리 뒤에 있는 배경 환경을 렌더링하기 위한 셰이더입니다.
 *Sprites: 2D 스프라이트 시스템과 사용하기 위한 셰이더입니다.
 *Toon: 카툰 스타일 렌더링을 위한 셰이더입니다.
 *Unlit: 모든 조명과 그림자를 완전히 바이패스하는 렌더링을 위한 셰이더입니다.
 *Legacy: 스탠다드 셰이더로 대체된 이전 셰이더의 컬렉션입니다.
 *
 *[ 셰이더 ]
 *셰이더는 모델 표면의 픽셀이 어떻게 나타나야 하는지에 대한 수학적인 연산과 알고리즘을 담고 있는 스크립트입니다.
 *스탠다드 셰이더는 복잡하고 현실성 있는 조명 연산을 수행
 *다른 셰이더는 더 간단한 연산이나 다른 종류의 연산을 통해 다양한 결과를 나타낼 수 있다.
 *각 셰이더에는 셰이더를 사용하는 머티리얼로부터 값을 받는 프로퍼티가 있다.
 *프로퍼티는 숫자, 컬러 정의, 텍스처 등으로 구성되며 머티리얼을 볼 때 인스펙터에 나타난다.
 *이후 머티리얼은 게임 오브젝트에 연결된 Renderer 컴포넌트에 의해 각 게임 오브젝트 메시를 렌더링하는 데 사용된다.
 *같은 텍스처를 레퍼런스하는 여러 다양한 머티리얼을 가질 수 있다.
 *머티리얼은 요구 사항에 따라 동일하거나 다른 셰이더를 사용할 수 있다.
  *
   *
	*조명방정식에서 
	* Diffuse - 빛이 물체에 흡수되는 컴포넌트.
	* Specular - 빛이 물체에 반사되는 컴포넌트. 금속류
	* Ambient - 환경광.
	* 
	* 
	* Albedo - 조명 고려
	* Emission - 조명 고려하지 않음
	* 
	* 
	* Half,fixed
	* float 1/2크기
	* half보다 더 작은 크기가 fixed
	* 컬러나 벡터의 길이는 fixed로 충분
	* 정밀도가 필요한것은 half
	* 
	* MainTex = 우리가 선택한 텍스쳐
  
 surf 함수
 IN = UV좌표
 
 */
